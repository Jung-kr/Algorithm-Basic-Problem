#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

// next_permutation를 이용한 순열  

int main(void){
    
    vector<int> v;	// input {1, 2, 3, 4}
    v.push_back(2);
    v.push_back(3);
    v.push_back(1);
    v.push_back(4);
    
    vector<int> visit; // 전체 길이가 n, 1의 개수가 r, 나머지가 0으로 채워진 보조 수열{0, 0, 1, 1}
	visit.push_back(0); 
    visit.push_back(0);
    visit.push_back(1);
    visit.push_back(1);
    
	sort(v.begin(), v.end()); // next_permutation은 이전 크기의 순열의 조합은 탐색하지 않으므로 sort 후 탐색 추천 
    
    do{
    	for(int i = 0 ; i < v.size() ; i++) {
    		if(visit[i] != 0) {
    			cout << v[i] << ' ';
			}
		}
		cout << '\n';
	} while(next_permutation(visit.begin(), visit.end()));	// 보조 순열에 대한 조합을 모든 순열을 구함 
	/*
	3 4
	2 4
	2 3
	1 4
	1 3
	1 2
	*/
    
    return 0;
}
